$date
	Tue Nov 08 16:14:31 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_ws_conv $end
$var wire 1 ! sa_ov $end
$var wire 19 " psum_o2 [18:0] $end
$var wire 19 # psum_o1 [18:0] $end
$var wire 19 $ psum_o0 [18:0] $end
$var wire 57 % psum_o [56:0] $end
$var parameter 32 & DATA_WIDTH $end
$var parameter 35 ' LATENCY $end
$var parameter 32 ( PSUM_WIDTH $end
$var parameter 32 ) SA_COL $end
$var parameter 32 * SA_ROW $end
$var parameter 32 + VECTOR_LENGTH $end
$var reg 1 , clk $end
$var reg 1 - nrst $end
$var reg 24 . row_A_i [23:0] $end
$var reg 1 / sa_iv $end
$scope module u_SA_WS_conv $end
$var wire 1 , clk $end
$var wire 1 - nrst $end
$var wire 24 0 row_A_i [23:0] $end
$var wire 1 / sa_iv $end
$var wire 72 1 weight_w [71:0] $end
$var wire 1 ! sa_ov $end
$var wire 228 2 psum_w [227:0] $end
$var wire 57 3 psum_o [56:0] $end
$var wire 96 4 ifmap_w [95:0] $end
$var parameter 32 5 DATA_WIDTH $end
$var parameter 35 6 LATENCY $end
$var parameter 32 7 LATE_WIDTH $end
$var parameter 32 8 PSUM_WIDTH $end
$var parameter 32 9 SA_COL $end
$var parameter 32 : SA_ROW $end
$var parameter 32 ; VECTOR_LENGTH $end
$var reg 4 < sa_cnt [3:0] $end
$scope begin R[0] $end
$var parameter 2 = r $end
$scope begin C[0] $end
$var parameter 2 > c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 ? ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 @ psum_i [19:0] $end
$var wire 8 A weight_i [7:0] $end
$var wire 20 B psum_o [19:0] $end
$var wire 8 C ifmap_o [7:0] $end
$var parameter 32 D ACCUMULATION_WIDTH $end
$var parameter 32 E IFMAP_WIDTH $end
$var parameter 34 F PSUM_WIDTH $end
$var parameter 32 G WEIGHT_WIDTH $end
$var reg 8 H ifmap_r [7:0] $end
$var reg 20 I psum_r [19:0] $end
$upscope $end
$upscope $end
$scope begin C[1] $end
$var parameter 2 J c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 K ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 L psum_i [19:0] $end
$var wire 8 M weight_i [7:0] $end
$var wire 20 N psum_o [19:0] $end
$var wire 8 O ifmap_o [7:0] $end
$var parameter 32 P ACCUMULATION_WIDTH $end
$var parameter 32 Q IFMAP_WIDTH $end
$var parameter 34 R PSUM_WIDTH $end
$var parameter 32 S WEIGHT_WIDTH $end
$var reg 8 T ifmap_r [7:0] $end
$var reg 20 U psum_r [19:0] $end
$upscope $end
$upscope $end
$scope begin C[2] $end
$var parameter 3 V c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 W ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 X psum_i [19:0] $end
$var wire 8 Y weight_i [7:0] $end
$var wire 20 Z psum_o [19:0] $end
$var wire 8 [ ifmap_o [7:0] $end
$var parameter 32 \ ACCUMULATION_WIDTH $end
$var parameter 32 ] IFMAP_WIDTH $end
$var parameter 34 ^ PSUM_WIDTH $end
$var parameter 32 _ WEIGHT_WIDTH $end
$var reg 8 ` ifmap_r [7:0] $end
$var reg 20 a psum_r [19:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin R[1] $end
$var parameter 2 b r $end
$scope begin C[0] $end
$var parameter 2 c c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 d ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 e psum_i [19:0] $end
$var wire 8 f weight_i [7:0] $end
$var wire 20 g psum_o [19:0] $end
$var wire 8 h ifmap_o [7:0] $end
$var parameter 32 i ACCUMULATION_WIDTH $end
$var parameter 32 j IFMAP_WIDTH $end
$var parameter 34 k PSUM_WIDTH $end
$var parameter 32 l WEIGHT_WIDTH $end
$var reg 8 m ifmap_r [7:0] $end
$var reg 20 n psum_r [19:0] $end
$upscope $end
$upscope $end
$scope begin C[1] $end
$var parameter 2 o c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 p ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 q psum_i [19:0] $end
$var wire 8 r weight_i [7:0] $end
$var wire 20 s psum_o [19:0] $end
$var wire 8 t ifmap_o [7:0] $end
$var parameter 32 u ACCUMULATION_WIDTH $end
$var parameter 32 v IFMAP_WIDTH $end
$var parameter 34 w PSUM_WIDTH $end
$var parameter 32 x WEIGHT_WIDTH $end
$var reg 8 y ifmap_r [7:0] $end
$var reg 20 z psum_r [19:0] $end
$upscope $end
$upscope $end
$scope begin C[2] $end
$var parameter 3 { c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 | ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 } psum_i [19:0] $end
$var wire 8 ~ weight_i [7:0] $end
$var wire 20 !" psum_o [19:0] $end
$var wire 8 "" ifmap_o [7:0] $end
$var parameter 32 #" ACCUMULATION_WIDTH $end
$var parameter 32 $" IFMAP_WIDTH $end
$var parameter 34 %" PSUM_WIDTH $end
$var parameter 32 &" WEIGHT_WIDTH $end
$var reg 8 '" ifmap_r [7:0] $end
$var reg 20 (" psum_r [19:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin R[2] $end
$var parameter 3 )" r $end
$scope begin C[0] $end
$var parameter 2 *" c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 +" ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 ," psum_i [19:0] $end
$var wire 8 -" weight_i [7:0] $end
$var wire 20 ." psum_o [19:0] $end
$var wire 8 /" ifmap_o [7:0] $end
$var parameter 32 0" ACCUMULATION_WIDTH $end
$var parameter 32 1" IFMAP_WIDTH $end
$var parameter 34 2" PSUM_WIDTH $end
$var parameter 32 3" WEIGHT_WIDTH $end
$var reg 8 4" ifmap_r [7:0] $end
$var reg 20 5" psum_r [19:0] $end
$upscope $end
$upscope $end
$scope begin C[1] $end
$var parameter 2 6" c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 7" ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 8" psum_i [19:0] $end
$var wire 8 9" weight_i [7:0] $end
$var wire 20 :" psum_o [19:0] $end
$var wire 8 ;" ifmap_o [7:0] $end
$var parameter 32 <" ACCUMULATION_WIDTH $end
$var parameter 32 =" IFMAP_WIDTH $end
$var parameter 34 >" PSUM_WIDTH $end
$var parameter 32 ?" WEIGHT_WIDTH $end
$var reg 8 @" ifmap_r [7:0] $end
$var reg 20 A" psum_r [19:0] $end
$upscope $end
$upscope $end
$scope begin C[2] $end
$var parameter 3 B" c $end
$scope module u_PE_weight_stationary $end
$var wire 1 , clk $end
$var wire 8 C" ifmap_i [7:0] $end
$var wire 1 - nrst $end
$var wire 1 / pe_en $end
$var wire 20 D" psum_i [19:0] $end
$var wire 8 E" weight_i [7:0] $end
$var wire 20 F" psum_o [19:0] $end
$var wire 8 G" ifmap_o [7:0] $end
$var parameter 32 H" ACCUMULATION_WIDTH $end
$var parameter 32 I" IFMAP_WIDTH $end
$var parameter 34 J" PSUM_WIDTH $end
$var parameter 32 K" WEIGHT_WIDTH $end
$var reg 8 L" ifmap_r [7:0] $end
$var reg 20 M" psum_r [19:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[0] $end
$var parameter 2 N" row $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 O" row $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 P" row $end
$upscope $end
$scope begin genblk2[0] $end
$var parameter 2 Q" col $end
$upscope $end
$scope begin genblk2[1] $end
$var parameter 2 R" col $end
$upscope $end
$scope begin genblk2[2] $end
$var parameter 3 S" col $end
$upscope $end
$scope module u_weight_kernel_conv0 $end
$var wire 72 T" weight_o [71:0] $end
$var parameter 32 U" KERNEL_HEIGHT $end
$var parameter 32 V" KERNEL_WIDTH $end
$var parameter 32 W" WEIGHT_WIDTH $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 X" i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 W"
b11 V"
b11 U"
b10 S"
b1 R"
b0 Q"
b10 P"
b1 O"
b0 N"
b1000 K"
b10100 J"
b1000 I"
b100 H"
b10 B"
b1000 ?"
b10100 >"
b1000 ="
b100 <"
b1 6"
b1000 3"
b10100 2"
b1000 1"
b100 0"
b0 *"
b10 )"
b1000 &"
b10100 %"
b1000 $"
b100 #"
b10 {
b1000 x
b10100 w
b1000 v
b100 u
b1 o
b1000 l
b10100 k
b1000 j
b100 i
b0 c
b1 b
b1000 _
b10100 ^
b1000 ]
b100 \
b10 V
b1000 S
b10100 R
b1000 Q
b100 P
b1 J
b1000 G
b10100 F
b1000 E
b100 D
b0 >
b0 =
b1000 ;
b11 :
b11 9
b10011 8
b100 7
b1101 6
b1000 5
b1000 +
b11 *
b11 )
b10011 (
b1101 '
b1000 &
$end
#0
$dumpvars
b11 X"
b1000000010000000100000001000000010000000100000001000000010000000100000 T"
b0 M"
b0 L"
b0 G"
b0 F"
b100000 E"
b0 D"
b0 C"
b0 A"
b0 @"
b0 ;"
b0 :"
b100000 9"
b0 8"
b0 7"
b0 5"
b0 4"
b0 /"
b0 ."
b100000 -"
b0 ,"
b0 +"
b0 ("
b0 '"
b0 ""
b0 !"
b100000 ~
b0 }
b0 |
b0 z
b0 y
b0 t
b0 s
b100000 r
b0 q
b0 p
b0 n
b0 m
b0 h
b0 g
b100000 f
b0 e
b0 d
b0 a
b0 `
b0 [
b0 Z
b100000 Y
b0 X
b0 W
b0 U
b0 T
b0 O
b0 N
b100000 M
b0 L
b0 K
b0 I
b0 H
b0 C
b0 B
b100000 A
b0 @
b0 ?
b0 <
b0 4
b0 3
b0 2
b1000000010000000100000001000000010000000100000001000000010000000100000 1
b0 0
0/
b0 .
0-
1,
b0 %
b0 $
b0 #
b0 "
0!
$end
#1000
1-
#5000
0,
#10000
1,
#15000
0,
#20000
1,
#25000
0,
#30000
1,
#31000
b11 ?
b11 4
b11 .
b11 0
1/
#35000
0,
#40000
b1100000 e
b1100000000000000000000000000000000000000000000000000000000000000 2
b11 K
b1100000 B
b1100000 I
b1100000011 4
b11 C
b11 H
b1 <
1,
#41000
b10 d
b1000000000000000000000001100000011 4
b1000000011 .
b1000000011 0
#45000
0,
#50000
b10100000 ,"
b1100000 q
b10 p
b11 W
b10100000000000000000000000000000000000011000000000000000001100000000000000000000000000000000000000000000000000000000000000 2
b10 <
b10 h
b10 m
b10100000 g
b10100000 n
b100000001000000000000000110000001100000011 4
b11 O
b11 T
b1100000 N
b1100000 U
1,
#51000
b1 +"
b10000000000000000000000100000001000000000000000110000001100000011 4
b10000001000000011 .
b10000001000000011 0
#55000
0,
#60000
b11000000 $
b1100000 }
b10100000 8"
b11000000 %
b11000000 3
b10 |
b11000000000000000000000000000000000000101000000000000000010100000000000000000110000000000000000011000000000000000001100000000000000000000000000000000000000000000000000000000000000 2
b1 7"
b1100000 Z
b1100000 a
b11 [
b11 `
b10100000 s
b10100000 z
b10 t
b10 y
b11000000 ."
b11000000 5"
b1000000010000000000000010000000100000001000000011000000110000001100000011 4
b1 /"
b1 4"
b11 <
1,
#65000
0,
#70000
b11000000 #
b110000000000000000011000000 %
b110000000000000000011000000 3
b10100000 D"
b1 C"
b110000000000000000011000000000000000001010000000000000000101000000000000000010100000000000000000110000000000000000011000000000000000001100000000000000000000000000000000000000000000000000000000000000 2
b100 <
b1 ;"
b1 @"
b11000000 :"
b11000000 A"
b100000001000000010000001000000010000000100000001000000011000000110000001100000011 4
b10 ""
b10 '"
b10100000 !"
b10100000 ("
1,
#75000
0,
#80000
b11000000 "
b1100000000000000000110000000000000000011000000 %
b1100000000000000000110000000000000000011000000 3
1!
b1100000000000000000110000000000000000011000000000000000001010000000000000000101000000000000000010100000000000000000110000000000000000011000000000000000001100000000000000000000000000000000000000000000000000000000000000 2
b11000000 F"
b11000000 M"
b10000000100000001000000010000001000000010000000100000001000000011000000110000001100000011 4
b1 G"
b1 L"
b101 <
1,
#85000
0,
#90000
b110 <
1,
#95000
0,
#100000
b111 <
1,
#105000
0,
#110000
b1000 <
1,
#111000
b0 ?
b10000000100000001000000010000001000000010000000100000001000000011000000110000001100000000 4
b10000001000000000 .
b10000001000000000 0
#115000
0,
#120000
b0 e
b1100000000000000000110000000000000000011000000000000000001010000000000000000101000000000000000010100000000000000000110000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000 2
b0 K
b0 B
b0 I
b10000000100000001000000010000001000000010000000100000001000000011000000110000000000000000 4
b0 C
b0 H
b1001 <
1,
#121000
b0 d
b10000000100000001000000010000001000000010000000100000000000000011000000110000000000000000 4
b10000000000000000 .
b10000000000000000 0
#125000
0,
#130000
b0 ,"
b0 q
b0 p
b0 W
b1100000000000000000110000000000000000011000000000000000001010000000000000000101000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2
b1010 <
b0 h
b0 m
b0 g
b0 n
b10000000100000001000000010000001000000010000000000000000000000011000000000000000000000000 4
b0 O
b0 T
b0 N
b0 U
1,
#131000
b0 +"
b10000000100000001000000000000001000000010000000000000000000000011000000000000000000000000 4
b0 .
b0 0
0/
#135000
0,
#140000
b0 $
b0 #
b0 "
b0 }
b0 8"
b0 D"
b0 %
b0 3
0!
b0 |
b0 7"
b0 C"
b0 2
b0 Z
b0 a
b0 [
b0 `
b0 s
b0 z
b0 t
b0 y
b0 !"
b0 ("
b0 ""
b0 '"
b0 ."
b0 5"
b0 /"
b0 4"
b0 :"
b0 A"
b0 ;"
b0 @"
b0 F"
b0 M"
b0 4
b0 G"
b0 L"
b0 <
1,
#145000
0,
#150000
1,
#155000
0,
#160000
1,
#165000
0,
#170000
1,
#175000
0,
#180000
1,
#185000
0,
#190000
1,
#195000
0,
#200000
1,
#205000
0,
#210000
1,
#215000
0,
#220000
1,
#225000
0,
#230000
1,
#231000
